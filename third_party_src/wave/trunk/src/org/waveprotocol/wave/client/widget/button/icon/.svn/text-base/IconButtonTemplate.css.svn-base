/*
 * CSS for buttons that are comprised of a simple icon.
 *
 * Each button has an associated classname (such as .panelRestore) which is
 * used when the button is in its NORMAL state. When a button enters a
 * different state (such as HOVER or DOWN) the widget will have the
 * .hover/.down class added to it, which will have the effect of changing the
 * gwt-image on that element.
 *
 * Therefore, .panelMinimize represents the minimize button when it is in its
 * neutral state, .hover.panelMinimize represents the minimize button when it
 * is in its hover state, and so forth.
 *
 * This is part 1 of the IconButtonTemplate.css file.  We need to split this
 * file into 2 because chrome breaks with very large css files.
 *
 * @author koz@google.com (James Kozianski)
 */

@sprite .panelMinimize {
  gwt-image: 'panelMinimize';
}

@sprite .panelMinimize.down {
  gwt-image: 'panelMinimizeDown';
}

@sprite .panelMinimize.hover {
  gwt-image: 'panelMinimizeHover';
}


@sprite .panelMaximize {
  gwt-image: 'panelMaximize';
}

@sprite .panelMaximize.down {
  gwt-image: 'panelMaximizeDown';
}

@sprite .panelMaximize.hover {
  gwt-image: 'panelMaximizeHover';
}

@sprite .panelRestore {
  gwt-image: 'panelRestore';
}

@sprite .panelRestore.down {
  gwt-image: 'panelRestoreDown';
}

@sprite .panelRestore.hover {
  gwt-image: 'panelRestoreHover';
}

@sprite .panelRestore.hover {
  gwt-image: 'panelRestoreHover';
}

@sprite .panelClose {
  gwt-image: 'panelClose';
}

@sprite .panelClose.down {
  gwt-image: 'panelCloseDown';
}

@sprite .panelClose.hover {
  gwt-image: 'panelCloseHover';
}

.disabled {
  opacity: 0.35;
}
