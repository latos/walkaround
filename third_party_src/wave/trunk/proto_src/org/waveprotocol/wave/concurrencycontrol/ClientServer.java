// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/waveprotocol/wave/concurrencycontrol/clientserver.proto

package org.waveprotocol.wave.concurrencycontrol;

public final class ClientServer {
  private ClientServer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class FetchWaveViewRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use FetchWaveViewRequest.newBuilder() to construct.
    private FetchWaveViewRequest() {
      initFields();
    }
    private FetchWaveViewRequest(boolean noInit) {}
    
    private static final FetchWaveViewRequest defaultInstance;
    public static FetchWaveViewRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public FetchWaveViewRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewRequest_fieldAccessorTable;
    }
    
    // required string waveId = 1;
    public static final int WAVEID_FIELD_NUMBER = 1;
    private boolean hasWaveId;
    private java.lang.String waveId_ = "";
    public boolean hasWaveId() { return hasWaveId; }
    public java.lang.String getWaveId() { return waveId_; }
    
    // repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;
    public static final int KNOWNWAVELET_FIELD_NUMBER = 2;
    private java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> knownWavelet_ =
      java.util.Collections.emptyList();
    public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> getKnownWaveletList() {
      return knownWavelet_;
    }
    public int getKnownWaveletCount() { return knownWavelet_.size(); }
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion getKnownWavelet(int index) {
      return knownWavelet_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasWaveId) return false;
      for (org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion element : getKnownWaveletList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWaveId()) {
        output.writeString(1, getWaveId());
      }
      for (org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion element : getKnownWaveletList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWaveId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getWaveId());
      }
      for (org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion element : getKnownWaveletList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.knownWavelet_ != java.util.Collections.EMPTY_LIST) {
          result.knownWavelet_ =
            java.util.Collections.unmodifiableList(result.knownWavelet_);
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.getDefaultInstance()) return this;
        if (other.hasWaveId()) {
          setWaveId(other.getWaveId());
        }
        if (!other.knownWavelet_.isEmpty()) {
          if (result.knownWavelet_.isEmpty()) {
            result.knownWavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion>();
          }
          result.knownWavelet_.addAll(other.knownWavelet_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setWaveId(input.readString());
              break;
            }
            case 18: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder subBuilder = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addKnownWavelet(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string waveId = 1;
      public boolean hasWaveId() {
        return result.hasWaveId();
      }
      public java.lang.String getWaveId() {
        return result.getWaveId();
      }
      public Builder setWaveId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWaveId = true;
        result.waveId_ = value;
        return this;
      }
      public Builder clearWaveId() {
        result.hasWaveId = false;
        result.waveId_ = getDefaultInstance().getWaveId();
        return this;
      }
      
      // repeated .concurrencycontrol.WaveletVersion knownWavelet = 2;
      public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> getKnownWaveletList() {
        return java.util.Collections.unmodifiableList(result.knownWavelet_);
      }
      public int getKnownWaveletCount() {
        return result.getKnownWaveletCount();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion getKnownWavelet(int index) {
        return result.getKnownWavelet(index);
      }
      public Builder setKnownWavelet(int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.knownWavelet_.set(index, value);
        return this;
      }
      public Builder setKnownWavelet(int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder builderForValue) {
        result.knownWavelet_.set(index, builderForValue.build());
        return this;
      }
      public Builder addKnownWavelet(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.knownWavelet_.isEmpty()) {
          result.knownWavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion>();
        }
        result.knownWavelet_.add(value);
        return this;
      }
      public Builder addKnownWavelet(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder builderForValue) {
        if (result.knownWavelet_.isEmpty()) {
          result.knownWavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion>();
        }
        result.knownWavelet_.add(builderForValue.build());
        return this;
      }
      public Builder addAllKnownWavelet(
          java.lang.Iterable<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion> values) {
        if (result.knownWavelet_.isEmpty()) {
          result.knownWavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion>();
        }
        super.addAll(values, result.knownWavelet_);
        return this;
      }
      public Builder clearKnownWavelet() {
        result.knownWavelet_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.FetchWaveViewRequest)
    }
    
    static {
      defaultInstance = new FetchWaveViewRequest(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.FetchWaveViewRequest)
  }
  
  public static final class FetchWaveViewResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use FetchWaveViewResponse.newBuilder() to construct.
    private FetchWaveViewResponse() {
      initFields();
    }
    private FetchWaveViewResponse(boolean noInit) {}
    
    private static final FetchWaveViewResponse defaultInstance;
    public static FetchWaveViewResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public FetchWaveViewResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_fieldAccessorTable;
    }
    
    public static final class Wavelet extends
        com.google.protobuf.GeneratedMessage {
      // Use Wavelet.newBuilder() to construct.
      private Wavelet() {
        initFields();
      }
      private Wavelet(boolean noInit) {}
      
      private static final Wavelet defaultInstance;
      public static Wavelet getDefaultInstance() {
        return defaultInstance;
      }
      
      public Wavelet getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_fieldAccessorTable;
      }
      
      // required string waveletId = 1;
      public static final int WAVELETID_FIELD_NUMBER = 1;
      private boolean hasWaveletId;
      private java.lang.String waveletId_ = "";
      public boolean hasWaveletId() { return hasWaveletId; }
      public java.lang.String getWaveletId() { return waveletId_; }
      
      // optional .concurrencycontrol.WaveletSnapshot snapshot = 2;
      public static final int SNAPSHOT_FIELD_NUMBER = 2;
      private boolean hasSnapshot;
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot snapshot_;
      public boolean hasSnapshot() { return hasSnapshot; }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot getSnapshot() { return snapshot_; }
      
      private void initFields() {
        snapshot_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDefaultInstance();
      }
      public final boolean isInitialized() {
        if (!hasWaveletId) return false;
        if (hasSnapshot()) {
          if (!getSnapshot().isInitialized()) return false;
        }
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasWaveletId()) {
          output.writeString(1, getWaveletId());
        }
        if (hasSnapshot()) {
          output.writeMessage(2, getSnapshot());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasWaveletId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getWaveletId());
        }
        if (hasSnapshot()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getSnapshot());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet result;
        
        // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet();
          return builder;
        }
        
        protected org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.getDescriptor();
        }
        
        public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet getDefaultInstanceForType() {
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet) {
            return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet other) {
          if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.getDefaultInstance()) return this;
          if (other.hasWaveletId()) {
            setWaveletId(other.getWaveletId());
          }
          if (other.hasSnapshot()) {
            mergeSnapshot(other.getSnapshot());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setWaveletId(input.readString());
                break;
              }
              case 18: {
                org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.Builder subBuilder = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.newBuilder();
                if (hasSnapshot()) {
                  subBuilder.mergeFrom(getSnapshot());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setSnapshot(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // required string waveletId = 1;
        public boolean hasWaveletId() {
          return result.hasWaveletId();
        }
        public java.lang.String getWaveletId() {
          return result.getWaveletId();
        }
        public Builder setWaveletId(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasWaveletId = true;
          result.waveletId_ = value;
          return this;
        }
        public Builder clearWaveletId() {
          result.hasWaveletId = false;
          result.waveletId_ = getDefaultInstance().getWaveletId();
          return this;
        }
        
        // optional .concurrencycontrol.WaveletSnapshot snapshot = 2;
        public boolean hasSnapshot() {
          return result.hasSnapshot();
        }
        public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot getSnapshot() {
          return result.getSnapshot();
        }
        public Builder setSnapshot(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasSnapshot = true;
          result.snapshot_ = value;
          return this;
        }
        public Builder setSnapshot(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.Builder builderForValue) {
          result.hasSnapshot = true;
          result.snapshot_ = builderForValue.build();
          return this;
        }
        public Builder mergeSnapshot(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot value) {
          if (result.hasSnapshot() &&
              result.snapshot_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDefaultInstance()) {
            result.snapshot_ =
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.newBuilder(result.snapshot_).mergeFrom(value).buildPartial();
          } else {
            result.snapshot_ = value;
          }
          result.hasSnapshot = true;
          return this;
        }
        public Builder clearSnapshot() {
          result.hasSnapshot = false;
          result.snapshot_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDefaultInstance();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:concurrencycontrol.FetchWaveViewResponse.Wavelet)
      }
      
      static {
        defaultInstance = new Wavelet(true);
        org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:concurrencycontrol.FetchWaveViewResponse.Wavelet)
    }
    
    // required .concurrencycontrol.ResponseStatus status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private boolean hasStatus;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus status_;
    public boolean hasStatus() { return hasStatus; }
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() { return status_; }
    
    // repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;
    public static final int WAVELET_FIELD_NUMBER = 2;
    private java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet> wavelet_ =
      java.util.Collections.emptyList();
    public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet> getWaveletList() {
      return wavelet_;
    }
    public int getWaveletCount() { return wavelet_.size(); }
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet getWavelet(int index) {
      return wavelet_.get(index);
    }
    
    private void initFields() {
      status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasStatus) return false;
      if (!getStatus().isInitialized()) return false;
      for (org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet element : getWaveletList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStatus()) {
        output.writeMessage(1, getStatus());
      }
      for (org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet element : getWaveletList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStatus());
      }
      for (org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet element : getWaveletList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.wavelet_ != java.util.Collections.EMPTY_LIST) {
          result.wavelet_ =
            java.util.Collections.unmodifiableList(result.wavelet_);
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        if (!other.wavelet_.isEmpty()) {
          if (result.wavelet_.isEmpty()) {
            result.wavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet>();
          }
          result.wavelet_.addAll(other.wavelet_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder subBuilder = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.newBuilder();
              if (hasStatus()) {
                subBuilder.mergeFrom(getStatus());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStatus(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder subBuilder = org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWavelet(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .concurrencycontrol.ResponseStatus status = 1;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder setStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder builderForValue) {
        result.hasStatus = true;
        result.status_ = builderForValue.build();
        return this;
      }
      public Builder mergeStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (result.hasStatus() &&
            result.status_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance()) {
          result.status_ =
            org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.newBuilder(result.status_).mergeFrom(value).buildPartial();
        } else {
          result.status_ = value;
        }
        result.hasStatus = true;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
        return this;
      }
      
      // repeated .concurrencycontrol.FetchWaveViewResponse.Wavelet wavelet = 2;
      public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet> getWaveletList() {
        return java.util.Collections.unmodifiableList(result.wavelet_);
      }
      public int getWaveletCount() {
        return result.getWaveletCount();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet getWavelet(int index) {
        return result.getWavelet(index);
      }
      public Builder setWavelet(int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.wavelet_.set(index, value);
        return this;
      }
      public Builder setWavelet(int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder builderForValue) {
        result.wavelet_.set(index, builderForValue.build());
        return this;
      }
      public Builder addWavelet(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.wavelet_.isEmpty()) {
          result.wavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet>();
        }
        result.wavelet_.add(value);
        return this;
      }
      public Builder addWavelet(org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder builderForValue) {
        if (result.wavelet_.isEmpty()) {
          result.wavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet>();
        }
        result.wavelet_.add(builderForValue.build());
        return this;
      }
      public Builder addAllWavelet(
          java.lang.Iterable<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet> values) {
        if (result.wavelet_.isEmpty()) {
          result.wavelet_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet>();
        }
        super.addAll(values, result.wavelet_);
        return this;
      }
      public Builder clearWavelet() {
        result.wavelet_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.FetchWaveViewResponse)
    }
    
    static {
      defaultInstance = new FetchWaveViewResponse(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.FetchWaveViewResponse)
  }
  
  public static final class WaveletVersion extends
      com.google.protobuf.GeneratedMessage {
    // Use WaveletVersion.newBuilder() to construct.
    private WaveletVersion() {
      initFields();
    }
    private WaveletVersion(boolean noInit) {}
    
    private static final WaveletVersion defaultInstance;
    public static WaveletVersion getDefaultInstance() {
      return defaultInstance;
    }
    
    public WaveletVersion getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletVersion_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletVersion_fieldAccessorTable;
    }
    
    // required string waveletId = 1;
    public static final int WAVELETID_FIELD_NUMBER = 1;
    private boolean hasWaveletId;
    private java.lang.String waveletId_ = "";
    public boolean hasWaveletId() { return hasWaveletId; }
    public java.lang.String getWaveletId() { return waveletId_; }
    
    // required .federation.ProtocolHashedVersion version = 2;
    public static final int VERSION_FIELD_NUMBER = 2;
    private boolean hasVersion;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion version_;
    public boolean hasVersion() { return hasVersion; }
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion() { return version_; }
    
    private void initFields() {
      version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasWaveletId) return false;
      if (!hasVersion) return false;
      if (!getVersion().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWaveletId()) {
        output.writeString(1, getWaveletId());
      }
      if (hasVersion()) {
        output.writeMessage(2, getVersion());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWaveletId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getWaveletId());
      }
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getVersion());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.getDefaultInstance()) return this;
        if (other.hasWaveletId()) {
          setWaveletId(other.getWaveletId());
        }
        if (other.hasVersion()) {
          mergeVersion(other.getVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setWaveletId(input.readString());
              break;
            }
            case 18: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder();
              if (hasVersion()) {
                subBuilder.mergeFrom(getVersion());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVersion(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string waveletId = 1;
      public boolean hasWaveletId() {
        return result.hasWaveletId();
      }
      public java.lang.String getWaveletId() {
        return result.getWaveletId();
      }
      public Builder setWaveletId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWaveletId = true;
        result.waveletId_ = value;
        return this;
      }
      public Builder clearWaveletId() {
        result.hasWaveletId = false;
        result.waveletId_ = getDefaultInstance().getWaveletId();
        return this;
      }
      
      // required .federation.ProtocolHashedVersion version = 2;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder setVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        result.hasVersion = true;
        result.version_ = builderForValue.build();
        return this;
      }
      public Builder mergeVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (result.hasVersion() &&
            result.version_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
          result.version_ =
            org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(result.version_).mergeFrom(value).buildPartial();
        } else {
          result.version_ = value;
        }
        result.hasVersion = true;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.WaveletVersion)
    }
    
    static {
      defaultInstance = new WaveletVersion(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.WaveletVersion)
  }
  
  public static final class WaveletSnapshot extends
      com.google.protobuf.GeneratedMessage {
    // Use WaveletSnapshot.newBuilder() to construct.
    private WaveletSnapshot() {
      initFields();
    }
    private WaveletSnapshot(boolean noInit) {}
    
    private static final WaveletSnapshot defaultInstance;
    public static WaveletSnapshot getDefaultInstance() {
      return defaultInstance;
    }
    
    public WaveletSnapshot getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletSnapshot_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletSnapshot_fieldAccessorTable;
    }
    
    // required string waveletId = 1;
    public static final int WAVELETID_FIELD_NUMBER = 1;
    private boolean hasWaveletId;
    private java.lang.String waveletId_ = "";
    public boolean hasWaveletId() { return hasWaveletId; }
    public java.lang.String getWaveletId() { return waveletId_; }
    
    // repeated string participant = 2;
    public static final int PARTICIPANT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> participant_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getParticipantList() {
      return participant_;
    }
    public int getParticipantCount() { return participant_.size(); }
    public java.lang.String getParticipant(int index) {
      return participant_.get(index);
    }
    
    // repeated .concurrencycontrol.DocumentSnapshot document = 3;
    public static final int DOCUMENT_FIELD_NUMBER = 3;
    private java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot> document_ =
      java.util.Collections.emptyList();
    public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot> getDocumentList() {
      return document_;
    }
    public int getDocumentCount() { return document_.size(); }
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot getDocument(int index) {
      return document_.get(index);
    }
    
    // required .federation.ProtocolHashedVersion version = 4;
    public static final int VERSION_FIELD_NUMBER = 4;
    private boolean hasVersion;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion version_;
    public boolean hasVersion() { return hasVersion; }
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion() { return version_; }
    
    // required int64 lastModifiedTime = 5;
    public static final int LASTMODIFIEDTIME_FIELD_NUMBER = 5;
    private boolean hasLastModifiedTime;
    private long lastModifiedTime_ = 0L;
    public boolean hasLastModifiedTime() { return hasLastModifiedTime; }
    public long getLastModifiedTime() { return lastModifiedTime_; }
    
    // required string creator = 6;
    public static final int CREATOR_FIELD_NUMBER = 6;
    private boolean hasCreator;
    private java.lang.String creator_ = "";
    public boolean hasCreator() { return hasCreator; }
    public java.lang.String getCreator() { return creator_; }
    
    // required int64 creationTime = 7;
    public static final int CREATIONTIME_FIELD_NUMBER = 7;
    private boolean hasCreationTime;
    private long creationTime_ = 0L;
    public boolean hasCreationTime() { return hasCreationTime; }
    public long getCreationTime() { return creationTime_; }
    
    private void initFields() {
      version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasWaveletId) return false;
      if (!hasVersion) return false;
      if (!hasLastModifiedTime) return false;
      if (!hasCreator) return false;
      if (!hasCreationTime) return false;
      for (org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot element : getDocumentList()) {
        if (!element.isInitialized()) return false;
      }
      if (!getVersion().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWaveletId()) {
        output.writeString(1, getWaveletId());
      }
      for (java.lang.String element : getParticipantList()) {
        output.writeString(2, element);
      }
      for (org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot element : getDocumentList()) {
        output.writeMessage(3, element);
      }
      if (hasVersion()) {
        output.writeMessage(4, getVersion());
      }
      if (hasLastModifiedTime()) {
        output.writeInt64(5, getLastModifiedTime());
      }
      if (hasCreator()) {
        output.writeString(6, getCreator());
      }
      if (hasCreationTime()) {
        output.writeInt64(7, getCreationTime());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWaveletId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getWaveletId());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getParticipantList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getParticipantList().size();
      }
      for (org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot element : getDocumentList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getVersion());
      }
      if (hasLastModifiedTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, getLastModifiedTime());
      }
      if (hasCreator()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getCreator());
      }
      if (hasCreationTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, getCreationTime());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.participant_ != java.util.Collections.EMPTY_LIST) {
          result.participant_ =
            java.util.Collections.unmodifiableList(result.participant_);
        }
        if (result.document_ != java.util.Collections.EMPTY_LIST) {
          result.document_ =
            java.util.Collections.unmodifiableList(result.document_);
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.getDefaultInstance()) return this;
        if (other.hasWaveletId()) {
          setWaveletId(other.getWaveletId());
        }
        if (!other.participant_.isEmpty()) {
          if (result.participant_.isEmpty()) {
            result.participant_ = new java.util.ArrayList<java.lang.String>();
          }
          result.participant_.addAll(other.participant_);
        }
        if (!other.document_.isEmpty()) {
          if (result.document_.isEmpty()) {
            result.document_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot>();
          }
          result.document_.addAll(other.document_);
        }
        if (other.hasVersion()) {
          mergeVersion(other.getVersion());
        }
        if (other.hasLastModifiedTime()) {
          setLastModifiedTime(other.getLastModifiedTime());
        }
        if (other.hasCreator()) {
          setCreator(other.getCreator());
        }
        if (other.hasCreationTime()) {
          setCreationTime(other.getCreationTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setWaveletId(input.readString());
              break;
            }
            case 18: {
              addParticipant(input.readString());
              break;
            }
            case 26: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder subBuilder = org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDocument(subBuilder.buildPartial());
              break;
            }
            case 34: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder();
              if (hasVersion()) {
                subBuilder.mergeFrom(getVersion());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVersion(subBuilder.buildPartial());
              break;
            }
            case 40: {
              setLastModifiedTime(input.readInt64());
              break;
            }
            case 50: {
              setCreator(input.readString());
              break;
            }
            case 56: {
              setCreationTime(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required string waveletId = 1;
      public boolean hasWaveletId() {
        return result.hasWaveletId();
      }
      public java.lang.String getWaveletId() {
        return result.getWaveletId();
      }
      public Builder setWaveletId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWaveletId = true;
        result.waveletId_ = value;
        return this;
      }
      public Builder clearWaveletId() {
        result.hasWaveletId = false;
        result.waveletId_ = getDefaultInstance().getWaveletId();
        return this;
      }
      
      // repeated string participant = 2;
      public java.util.List<java.lang.String> getParticipantList() {
        return java.util.Collections.unmodifiableList(result.participant_);
      }
      public int getParticipantCount() {
        return result.getParticipantCount();
      }
      public java.lang.String getParticipant(int index) {
        return result.getParticipant(index);
      }
      public Builder setParticipant(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.participant_.set(index, value);
        return this;
      }
      public Builder addParticipant(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.participant_.isEmpty()) {
          result.participant_ = new java.util.ArrayList<java.lang.String>();
        }
        result.participant_.add(value);
        return this;
      }
      public Builder addAllParticipant(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.participant_.isEmpty()) {
          result.participant_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.participant_);
        return this;
      }
      public Builder clearParticipant() {
        result.participant_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .concurrencycontrol.DocumentSnapshot document = 3;
      public java.util.List<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot> getDocumentList() {
        return java.util.Collections.unmodifiableList(result.document_);
      }
      public int getDocumentCount() {
        return result.getDocumentCount();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot getDocument(int index) {
        return result.getDocument(index);
      }
      public Builder setDocument(int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.document_.set(index, value);
        return this;
      }
      public Builder setDocument(int index, org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder builderForValue) {
        result.document_.set(index, builderForValue.build());
        return this;
      }
      public Builder addDocument(org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.document_.isEmpty()) {
          result.document_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot>();
        }
        result.document_.add(value);
        return this;
      }
      public Builder addDocument(org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder builderForValue) {
        if (result.document_.isEmpty()) {
          result.document_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot>();
        }
        result.document_.add(builderForValue.build());
        return this;
      }
      public Builder addAllDocument(
          java.lang.Iterable<? extends org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot> values) {
        if (result.document_.isEmpty()) {
          result.document_ = new java.util.ArrayList<org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot>();
        }
        super.addAll(values, result.document_);
        return this;
      }
      public Builder clearDocument() {
        result.document_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required .federation.ProtocolHashedVersion version = 4;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder setVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        result.hasVersion = true;
        result.version_ = builderForValue.build();
        return this;
      }
      public Builder mergeVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (result.hasVersion() &&
            result.version_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
          result.version_ =
            org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(result.version_).mergeFrom(value).buildPartial();
        } else {
          result.version_ = value;
        }
        result.hasVersion = true;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        return this;
      }
      
      // required int64 lastModifiedTime = 5;
      public boolean hasLastModifiedTime() {
        return result.hasLastModifiedTime();
      }
      public long getLastModifiedTime() {
        return result.getLastModifiedTime();
      }
      public Builder setLastModifiedTime(long value) {
        result.hasLastModifiedTime = true;
        result.lastModifiedTime_ = value;
        return this;
      }
      public Builder clearLastModifiedTime() {
        result.hasLastModifiedTime = false;
        result.lastModifiedTime_ = 0L;
        return this;
      }
      
      // required string creator = 6;
      public boolean hasCreator() {
        return result.hasCreator();
      }
      public java.lang.String getCreator() {
        return result.getCreator();
      }
      public Builder setCreator(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCreator = true;
        result.creator_ = value;
        return this;
      }
      public Builder clearCreator() {
        result.hasCreator = false;
        result.creator_ = getDefaultInstance().getCreator();
        return this;
      }
      
      // required int64 creationTime = 7;
      public boolean hasCreationTime() {
        return result.hasCreationTime();
      }
      public long getCreationTime() {
        return result.getCreationTime();
      }
      public Builder setCreationTime(long value) {
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder clearCreationTime() {
        result.hasCreationTime = false;
        result.creationTime_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.WaveletSnapshot)
    }
    
    static {
      defaultInstance = new WaveletSnapshot(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.WaveletSnapshot)
  }
  
  public static final class DocumentSnapshot extends
      com.google.protobuf.GeneratedMessage {
    // Use DocumentSnapshot.newBuilder() to construct.
    private DocumentSnapshot() {
      initFields();
    }
    private DocumentSnapshot(boolean noInit) {}
    
    private static final DocumentSnapshot defaultInstance;
    public static DocumentSnapshot getDefaultInstance() {
      return defaultInstance;
    }
    
    public DocumentSnapshot getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_DocumentSnapshot_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_DocumentSnapshot_fieldAccessorTable;
    }
    
    // required string documentId = 1;
    public static final int DOCUMENTID_FIELD_NUMBER = 1;
    private boolean hasDocumentId;
    private java.lang.String documentId_ = "";
    public boolean hasDocumentId() { return hasDocumentId; }
    public java.lang.String getDocumentId() { return documentId_; }
    
    // required .federation.ProtocolDocumentOperation documentOperation = 2;
    public static final int DOCUMENTOPERATION_FIELD_NUMBER = 2;
    private boolean hasDocumentOperation;
    private org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation documentOperation_;
    public boolean hasDocumentOperation() { return hasDocumentOperation; }
    public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getDocumentOperation() { return documentOperation_; }
    
    // required string author = 3;
    public static final int AUTHOR_FIELD_NUMBER = 3;
    private boolean hasAuthor;
    private java.lang.String author_ = "";
    public boolean hasAuthor() { return hasAuthor; }
    public java.lang.String getAuthor() { return author_; }
    
    // repeated string contributor = 4;
    public static final int CONTRIBUTOR_FIELD_NUMBER = 4;
    private java.util.List<java.lang.String> contributor_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getContributorList() {
      return contributor_;
    }
    public int getContributorCount() { return contributor_.size(); }
    public java.lang.String getContributor(int index) {
      return contributor_.get(index);
    }
    
    // required int64 lastModifiedVersion = 5;
    public static final int LASTMODIFIEDVERSION_FIELD_NUMBER = 5;
    private boolean hasLastModifiedVersion;
    private long lastModifiedVersion_ = 0L;
    public boolean hasLastModifiedVersion() { return hasLastModifiedVersion; }
    public long getLastModifiedVersion() { return lastModifiedVersion_; }
    
    // required int64 lastModifiedTime = 6;
    public static final int LASTMODIFIEDTIME_FIELD_NUMBER = 6;
    private boolean hasLastModifiedTime;
    private long lastModifiedTime_ = 0L;
    public boolean hasLastModifiedTime() { return hasLastModifiedTime; }
    public long getLastModifiedTime() { return lastModifiedTime_; }
    
    private void initFields() {
      documentOperation_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasDocumentId) return false;
      if (!hasDocumentOperation) return false;
      if (!hasAuthor) return false;
      if (!hasLastModifiedVersion) return false;
      if (!hasLastModifiedTime) return false;
      if (!getDocumentOperation().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDocumentId()) {
        output.writeString(1, getDocumentId());
      }
      if (hasDocumentOperation()) {
        output.writeMessage(2, getDocumentOperation());
      }
      if (hasAuthor()) {
        output.writeString(3, getAuthor());
      }
      for (java.lang.String element : getContributorList()) {
        output.writeString(4, element);
      }
      if (hasLastModifiedVersion()) {
        output.writeInt64(5, getLastModifiedVersion());
      }
      if (hasLastModifiedTime()) {
        output.writeInt64(6, getLastModifiedTime());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDocumentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getDocumentId());
      }
      if (hasDocumentOperation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDocumentOperation());
      }
      if (hasAuthor()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getAuthor());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getContributorList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getContributorList().size();
      }
      if (hasLastModifiedVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, getLastModifiedVersion());
      }
      if (hasLastModifiedTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, getLastModifiedTime());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.contributor_ != java.util.Collections.EMPTY_LIST) {
          result.contributor_ =
            java.util.Collections.unmodifiableList(result.contributor_);
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.getDefaultInstance()) return this;
        if (other.hasDocumentId()) {
          setDocumentId(other.getDocumentId());
        }
        if (other.hasDocumentOperation()) {
          mergeDocumentOperation(other.getDocumentOperation());
        }
        if (other.hasAuthor()) {
          setAuthor(other.getAuthor());
        }
        if (!other.contributor_.isEmpty()) {
          if (result.contributor_.isEmpty()) {
            result.contributor_ = new java.util.ArrayList<java.lang.String>();
          }
          result.contributor_.addAll(other.contributor_);
        }
        if (other.hasLastModifiedVersion()) {
          setLastModifiedVersion(other.getLastModifiedVersion());
        }
        if (other.hasLastModifiedTime()) {
          setLastModifiedTime(other.getLastModifiedTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setDocumentId(input.readString());
              break;
            }
            case 18: {
              org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.newBuilder();
              if (hasDocumentOperation()) {
                subBuilder.mergeFrom(getDocumentOperation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDocumentOperation(subBuilder.buildPartial());
              break;
            }
            case 26: {
              setAuthor(input.readString());
              break;
            }
            case 34: {
              addContributor(input.readString());
              break;
            }
            case 40: {
              setLastModifiedVersion(input.readInt64());
              break;
            }
            case 48: {
              setLastModifiedTime(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required string documentId = 1;
      public boolean hasDocumentId() {
        return result.hasDocumentId();
      }
      public java.lang.String getDocumentId() {
        return result.getDocumentId();
      }
      public Builder setDocumentId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDocumentId = true;
        result.documentId_ = value;
        return this;
      }
      public Builder clearDocumentId() {
        result.hasDocumentId = false;
        result.documentId_ = getDefaultInstance().getDocumentId();
        return this;
      }
      
      // required .federation.ProtocolDocumentOperation documentOperation = 2;
      public boolean hasDocumentOperation() {
        return result.hasDocumentOperation();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation getDocumentOperation() {
        return result.getDocumentOperation();
      }
      public Builder setDocumentOperation(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDocumentOperation = true;
        result.documentOperation_ = value;
        return this;
      }
      public Builder setDocumentOperation(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.Builder builderForValue) {
        result.hasDocumentOperation = true;
        result.documentOperation_ = builderForValue.build();
        return this;
      }
      public Builder mergeDocumentOperation(org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation value) {
        if (result.hasDocumentOperation() &&
            result.documentOperation_ != org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance()) {
          result.documentOperation_ =
            org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.newBuilder(result.documentOperation_).mergeFrom(value).buildPartial();
        } else {
          result.documentOperation_ = value;
        }
        result.hasDocumentOperation = true;
        return this;
      }
      public Builder clearDocumentOperation() {
        result.hasDocumentOperation = false;
        result.documentOperation_ = org.waveprotocol.wave.federation.Proto.ProtocolDocumentOperation.getDefaultInstance();
        return this;
      }
      
      // required string author = 3;
      public boolean hasAuthor() {
        return result.hasAuthor();
      }
      public java.lang.String getAuthor() {
        return result.getAuthor();
      }
      public Builder setAuthor(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAuthor = true;
        result.author_ = value;
        return this;
      }
      public Builder clearAuthor() {
        result.hasAuthor = false;
        result.author_ = getDefaultInstance().getAuthor();
        return this;
      }
      
      // repeated string contributor = 4;
      public java.util.List<java.lang.String> getContributorList() {
        return java.util.Collections.unmodifiableList(result.contributor_);
      }
      public int getContributorCount() {
        return result.getContributorCount();
      }
      public java.lang.String getContributor(int index) {
        return result.getContributor(index);
      }
      public Builder setContributor(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.contributor_.set(index, value);
        return this;
      }
      public Builder addContributor(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.contributor_.isEmpty()) {
          result.contributor_ = new java.util.ArrayList<java.lang.String>();
        }
        result.contributor_.add(value);
        return this;
      }
      public Builder addAllContributor(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.contributor_.isEmpty()) {
          result.contributor_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.contributor_);
        return this;
      }
      public Builder clearContributor() {
        result.contributor_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required int64 lastModifiedVersion = 5;
      public boolean hasLastModifiedVersion() {
        return result.hasLastModifiedVersion();
      }
      public long getLastModifiedVersion() {
        return result.getLastModifiedVersion();
      }
      public Builder setLastModifiedVersion(long value) {
        result.hasLastModifiedVersion = true;
        result.lastModifiedVersion_ = value;
        return this;
      }
      public Builder clearLastModifiedVersion() {
        result.hasLastModifiedVersion = false;
        result.lastModifiedVersion_ = 0L;
        return this;
      }
      
      // required int64 lastModifiedTime = 6;
      public boolean hasLastModifiedTime() {
        return result.hasLastModifiedTime();
      }
      public long getLastModifiedTime() {
        return result.getLastModifiedTime();
      }
      public Builder setLastModifiedTime(long value) {
        result.hasLastModifiedTime = true;
        result.lastModifiedTime_ = value;
        return this;
      }
      public Builder clearLastModifiedTime() {
        result.hasLastModifiedTime = false;
        result.lastModifiedTime_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.DocumentSnapshot)
    }
    
    static {
      defaultInstance = new DocumentSnapshot(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.DocumentSnapshot)
  }
  
  public static final class OpenWaveletChannelRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use OpenWaveletChannelRequest.newBuilder() to construct.
    private OpenWaveletChannelRequest() {
      initFields();
    }
    private OpenWaveletChannelRequest(boolean noInit) {}
    
    private static final OpenWaveletChannelRequest defaultInstance;
    public static OpenWaveletChannelRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public OpenWaveletChannelRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelRequest_fieldAccessorTable;
    }
    
    // required string waveId = 1;
    public static final int WAVEID_FIELD_NUMBER = 1;
    private boolean hasWaveId;
    private java.lang.String waveId_ = "";
    public boolean hasWaveId() { return hasWaveId; }
    public java.lang.String getWaveId() { return waveId_; }
    
    // required string waveletId = 2;
    public static final int WAVELETID_FIELD_NUMBER = 2;
    private boolean hasWaveletId;
    private java.lang.String waveletId_ = "";
    public boolean hasWaveletId() { return hasWaveletId; }
    public java.lang.String getWaveletId() { return waveletId_; }
    
    // required .federation.ProtocolHashedVersion beginVersion = 3;
    public static final int BEGINVERSION_FIELD_NUMBER = 3;
    private boolean hasBeginVersion;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion beginVersion_;
    public boolean hasBeginVersion() { return hasBeginVersion; }
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getBeginVersion() { return beginVersion_; }
    
    private void initFields() {
      beginVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasWaveId) return false;
      if (!hasWaveletId) return false;
      if (!hasBeginVersion) return false;
      if (!getBeginVersion().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWaveId()) {
        output.writeString(1, getWaveId());
      }
      if (hasWaveletId()) {
        output.writeString(2, getWaveletId());
      }
      if (hasBeginVersion()) {
        output.writeMessage(3, getBeginVersion());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWaveId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getWaveId());
      }
      if (hasWaveletId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getWaveletId());
      }
      if (hasBeginVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getBeginVersion());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.getDefaultInstance()) return this;
        if (other.hasWaveId()) {
          setWaveId(other.getWaveId());
        }
        if (other.hasWaveletId()) {
          setWaveletId(other.getWaveletId());
        }
        if (other.hasBeginVersion()) {
          mergeBeginVersion(other.getBeginVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setWaveId(input.readString());
              break;
            }
            case 18: {
              setWaveletId(input.readString());
              break;
            }
            case 26: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder();
              if (hasBeginVersion()) {
                subBuilder.mergeFrom(getBeginVersion());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBeginVersion(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string waveId = 1;
      public boolean hasWaveId() {
        return result.hasWaveId();
      }
      public java.lang.String getWaveId() {
        return result.getWaveId();
      }
      public Builder setWaveId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWaveId = true;
        result.waveId_ = value;
        return this;
      }
      public Builder clearWaveId() {
        result.hasWaveId = false;
        result.waveId_ = getDefaultInstance().getWaveId();
        return this;
      }
      
      // required string waveletId = 2;
      public boolean hasWaveletId() {
        return result.hasWaveletId();
      }
      public java.lang.String getWaveletId() {
        return result.getWaveletId();
      }
      public Builder setWaveletId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWaveletId = true;
        result.waveletId_ = value;
        return this;
      }
      public Builder clearWaveletId() {
        result.hasWaveletId = false;
        result.waveletId_ = getDefaultInstance().getWaveletId();
        return this;
      }
      
      // required .federation.ProtocolHashedVersion beginVersion = 3;
      public boolean hasBeginVersion() {
        return result.hasBeginVersion();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getBeginVersion() {
        return result.getBeginVersion();
      }
      public Builder setBeginVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBeginVersion = true;
        result.beginVersion_ = value;
        return this;
      }
      public Builder setBeginVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        result.hasBeginVersion = true;
        result.beginVersion_ = builderForValue.build();
        return this;
      }
      public Builder mergeBeginVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (result.hasBeginVersion() &&
            result.beginVersion_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
          result.beginVersion_ =
            org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(result.beginVersion_).mergeFrom(value).buildPartial();
        } else {
          result.beginVersion_ = value;
        }
        result.hasBeginVersion = true;
        return this;
      }
      public Builder clearBeginVersion() {
        result.hasBeginVersion = false;
        result.beginVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.OpenWaveletChannelRequest)
    }
    
    static {
      defaultInstance = new OpenWaveletChannelRequest(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.OpenWaveletChannelRequest)
  }
  
  public static final class OpenWaveletChannelStream extends
      com.google.protobuf.GeneratedMessage {
    // Use OpenWaveletChannelStream.newBuilder() to construct.
    private OpenWaveletChannelStream() {
      initFields();
    }
    private OpenWaveletChannelStream(boolean noInit) {}
    
    private static final OpenWaveletChannelStream defaultInstance;
    public static OpenWaveletChannelStream getDefaultInstance() {
      return defaultInstance;
    }
    
    public OpenWaveletChannelStream getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelStream_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_OpenWaveletChannelStream_fieldAccessorTable;
    }
    
    // optional string channelId = 1;
    public static final int CHANNELID_FIELD_NUMBER = 1;
    private boolean hasChannelId;
    private java.lang.String channelId_ = "";
    public boolean hasChannelId() { return hasChannelId; }
    public java.lang.String getChannelId() { return channelId_; }
    
    // optional .concurrencycontrol.WaveletUpdate delta = 2;
    public static final int DELTA_FIELD_NUMBER = 2;
    private boolean hasDelta;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate delta_;
    public boolean hasDelta() { return hasDelta; }
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate getDelta() { return delta_; }
    
    // optional .federation.ProtocolHashedVersion commitVersion = 3;
    public static final int COMMITVERSION_FIELD_NUMBER = 3;
    private boolean hasCommitVersion;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion commitVersion_;
    public boolean hasCommitVersion() { return hasCommitVersion; }
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getCommitVersion() { return commitVersion_; }
    
    // optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;
    public static final int TERMINATOR_FIELD_NUMBER = 4;
    private boolean hasTerminator;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator terminator_;
    public boolean hasTerminator() { return hasTerminator; }
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator getTerminator() { return terminator_; }
    
    private void initFields() {
      delta_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDefaultInstance();
      commitVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      terminator_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasDelta()) {
        if (!getDelta().isInitialized()) return false;
      }
      if (hasCommitVersion()) {
        if (!getCommitVersion().isInitialized()) return false;
      }
      if (hasTerminator()) {
        if (!getTerminator().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasChannelId()) {
        output.writeString(1, getChannelId());
      }
      if (hasDelta()) {
        output.writeMessage(2, getDelta());
      }
      if (hasCommitVersion()) {
        output.writeMessage(3, getCommitVersion());
      }
      if (hasTerminator()) {
        output.writeMessage(4, getTerminator());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getChannelId());
      }
      if (hasDelta()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDelta());
      }
      if (hasCommitVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCommitVersion());
      }
      if (hasTerminator()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTerminator());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasDelta()) {
          mergeDelta(other.getDelta());
        }
        if (other.hasCommitVersion()) {
          mergeCommitVersion(other.getCommitVersion());
        }
        if (other.hasTerminator()) {
          mergeTerminator(other.getTerminator());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setChannelId(input.readString());
              break;
            }
            case 18: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.Builder subBuilder = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.newBuilder();
              if (hasDelta()) {
                subBuilder.mergeFrom(getDelta());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDelta(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder();
              if (hasCommitVersion()) {
                subBuilder.mergeFrom(getCommitVersion());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCommitVersion(subBuilder.buildPartial());
              break;
            }
            case 34: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.Builder subBuilder = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.newBuilder();
              if (hasTerminator()) {
                subBuilder.mergeFrom(getTerminator());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTerminator(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional string channelId = 1;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public java.lang.String getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = getDefaultInstance().getChannelId();
        return this;
      }
      
      // optional .concurrencycontrol.WaveletUpdate delta = 2;
      public boolean hasDelta() {
        return result.hasDelta();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate getDelta() {
        return result.getDelta();
      }
      public Builder setDelta(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDelta = true;
        result.delta_ = value;
        return this;
      }
      public Builder setDelta(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.Builder builderForValue) {
        result.hasDelta = true;
        result.delta_ = builderForValue.build();
        return this;
      }
      public Builder mergeDelta(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate value) {
        if (result.hasDelta() &&
            result.delta_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDefaultInstance()) {
          result.delta_ =
            org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.newBuilder(result.delta_).mergeFrom(value).buildPartial();
        } else {
          result.delta_ = value;
        }
        result.hasDelta = true;
        return this;
      }
      public Builder clearDelta() {
        result.hasDelta = false;
        result.delta_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDefaultInstance();
        return this;
      }
      
      // optional .federation.ProtocolHashedVersion commitVersion = 3;
      public boolean hasCommitVersion() {
        return result.hasCommitVersion();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getCommitVersion() {
        return result.getCommitVersion();
      }
      public Builder setCommitVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCommitVersion = true;
        result.commitVersion_ = value;
        return this;
      }
      public Builder setCommitVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        result.hasCommitVersion = true;
        result.commitVersion_ = builderForValue.build();
        return this;
      }
      public Builder mergeCommitVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (result.hasCommitVersion() &&
            result.commitVersion_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
          result.commitVersion_ =
            org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(result.commitVersion_).mergeFrom(value).buildPartial();
        } else {
          result.commitVersion_ = value;
        }
        result.hasCommitVersion = true;
        return this;
      }
      public Builder clearCommitVersion() {
        result.hasCommitVersion = false;
        result.commitVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        return this;
      }
      
      // optional .concurrencycontrol.WaveletChannelTerminator terminator = 4;
      public boolean hasTerminator() {
        return result.hasTerminator();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator getTerminator() {
        return result.getTerminator();
      }
      public Builder setTerminator(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTerminator = true;
        result.terminator_ = value;
        return this;
      }
      public Builder setTerminator(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.Builder builderForValue) {
        result.hasTerminator = true;
        result.terminator_ = builderForValue.build();
        return this;
      }
      public Builder mergeTerminator(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator value) {
        if (result.hasTerminator() &&
            result.terminator_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDefaultInstance()) {
          result.terminator_ =
            org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.newBuilder(result.terminator_).mergeFrom(value).buildPartial();
        } else {
          result.terminator_ = value;
        }
        result.hasTerminator = true;
        return this;
      }
      public Builder clearTerminator() {
        result.hasTerminator = false;
        result.terminator_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.OpenWaveletChannelStream)
    }
    
    static {
      defaultInstance = new OpenWaveletChannelStream(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.OpenWaveletChannelStream)
  }
  
  public static final class CloseWaveletChannelRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use CloseWaveletChannelRequest.newBuilder() to construct.
    private CloseWaveletChannelRequest() {
      initFields();
    }
    private CloseWaveletChannelRequest(boolean noInit) {}
    
    private static final CloseWaveletChannelRequest defaultInstance;
    public static CloseWaveletChannelRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CloseWaveletChannelRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_CloseWaveletChannelRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_CloseWaveletChannelRequest_fieldAccessorTable;
    }
    
    // required string channelId = 1;
    public static final int CHANNELID_FIELD_NUMBER = 1;
    private boolean hasChannelId;
    private java.lang.String channelId_ = "";
    public boolean hasChannelId() { return hasChannelId; }
    public java.lang.String getChannelId() { return channelId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasChannelId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasChannelId()) {
        output.writeString(1, getChannelId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getChannelId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setChannelId(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string channelId = 1;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public java.lang.String getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = getDefaultInstance().getChannelId();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.CloseWaveletChannelRequest)
    }
    
    static {
      defaultInstance = new CloseWaveletChannelRequest(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.CloseWaveletChannelRequest)
  }
  
  public static final class WaveletUpdate extends
      com.google.protobuf.GeneratedMessage {
    // Use WaveletUpdate.newBuilder() to construct.
    private WaveletUpdate() {
      initFields();
    }
    private WaveletUpdate(boolean noInit) {}
    
    private static final WaveletUpdate defaultInstance;
    public static WaveletUpdate getDefaultInstance() {
      return defaultInstance;
    }
    
    public WaveletUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletUpdate_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletUpdate_fieldAccessorTable;
    }
    
    // required .federation.ProtocolWaveletDelta delta = 1;
    public static final int DELTA_FIELD_NUMBER = 1;
    private boolean hasDelta;
    private org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta delta_;
    public boolean hasDelta() { return hasDelta; }
    public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta() { return delta_; }
    
    // required .federation.ProtocolHashedVersion resultingVersion = 2;
    public static final int RESULTINGVERSION_FIELD_NUMBER = 2;
    private boolean hasResultingVersion;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion resultingVersion_;
    public boolean hasResultingVersion() { return hasResultingVersion; }
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getResultingVersion() { return resultingVersion_; }
    
    // required int64 applicationTimpstamp = 3;
    public static final int APPLICATIONTIMPSTAMP_FIELD_NUMBER = 3;
    private boolean hasApplicationTimpstamp;
    private long applicationTimpstamp_ = 0L;
    public boolean hasApplicationTimpstamp() { return hasApplicationTimpstamp; }
    public long getApplicationTimpstamp() { return applicationTimpstamp_; }
    
    private void initFields() {
      delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
      resultingVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasDelta) return false;
      if (!hasResultingVersion) return false;
      if (!hasApplicationTimpstamp) return false;
      if (!getDelta().isInitialized()) return false;
      if (!getResultingVersion().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDelta()) {
        output.writeMessage(1, getDelta());
      }
      if (hasResultingVersion()) {
        output.writeMessage(2, getResultingVersion());
      }
      if (hasApplicationTimpstamp()) {
        output.writeInt64(3, getApplicationTimpstamp());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDelta()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDelta());
      }
      if (hasResultingVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getResultingVersion());
      }
      if (hasApplicationTimpstamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, getApplicationTimpstamp());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.getDefaultInstance()) return this;
        if (other.hasDelta()) {
          mergeDelta(other.getDelta());
        }
        if (other.hasResultingVersion()) {
          mergeResultingVersion(other.getResultingVersion());
        }
        if (other.hasApplicationTimpstamp()) {
          setApplicationTimpstamp(other.getApplicationTimpstamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.newBuilder();
              if (hasDelta()) {
                subBuilder.mergeFrom(getDelta());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDelta(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder();
              if (hasResultingVersion()) {
                subBuilder.mergeFrom(getResultingVersion());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResultingVersion(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setApplicationTimpstamp(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required .federation.ProtocolWaveletDelta delta = 1;
      public boolean hasDelta() {
        return result.hasDelta();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta() {
        return result.getDelta();
      }
      public Builder setDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDelta = true;
        result.delta_ = value;
        return this;
      }
      public Builder setDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder builderForValue) {
        result.hasDelta = true;
        result.delta_ = builderForValue.build();
        return this;
      }
      public Builder mergeDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (result.hasDelta() &&
            result.delta_ != org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance()) {
          result.delta_ =
            org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.newBuilder(result.delta_).mergeFrom(value).buildPartial();
        } else {
          result.delta_ = value;
        }
        result.hasDelta = true;
        return this;
      }
      public Builder clearDelta() {
        result.hasDelta = false;
        result.delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
        return this;
      }
      
      // required .federation.ProtocolHashedVersion resultingVersion = 2;
      public boolean hasResultingVersion() {
        return result.hasResultingVersion();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getResultingVersion() {
        return result.getResultingVersion();
      }
      public Builder setResultingVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResultingVersion = true;
        result.resultingVersion_ = value;
        return this;
      }
      public Builder setResultingVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        result.hasResultingVersion = true;
        result.resultingVersion_ = builderForValue.build();
        return this;
      }
      public Builder mergeResultingVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (result.hasResultingVersion() &&
            result.resultingVersion_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
          result.resultingVersion_ =
            org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(result.resultingVersion_).mergeFrom(value).buildPartial();
        } else {
          result.resultingVersion_ = value;
        }
        result.hasResultingVersion = true;
        return this;
      }
      public Builder clearResultingVersion() {
        result.hasResultingVersion = false;
        result.resultingVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        return this;
      }
      
      // required int64 applicationTimpstamp = 3;
      public boolean hasApplicationTimpstamp() {
        return result.hasApplicationTimpstamp();
      }
      public long getApplicationTimpstamp() {
        return result.getApplicationTimpstamp();
      }
      public Builder setApplicationTimpstamp(long value) {
        result.hasApplicationTimpstamp = true;
        result.applicationTimpstamp_ = value;
        return this;
      }
      public Builder clearApplicationTimpstamp() {
        result.hasApplicationTimpstamp = false;
        result.applicationTimpstamp_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.WaveletUpdate)
    }
    
    static {
      defaultInstance = new WaveletUpdate(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.WaveletUpdate)
  }
  
  public static final class WaveletChannelTerminator extends
      com.google.protobuf.GeneratedMessage {
    // Use WaveletChannelTerminator.newBuilder() to construct.
    private WaveletChannelTerminator() {
      initFields();
    }
    private WaveletChannelTerminator(boolean noInit) {}
    
    private static final WaveletChannelTerminator defaultInstance;
    public static WaveletChannelTerminator getDefaultInstance() {
      return defaultInstance;
    }
    
    public WaveletChannelTerminator getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletChannelTerminator_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_WaveletChannelTerminator_fieldAccessorTable;
    }
    
    // required .concurrencycontrol.ResponseStatus status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private boolean hasStatus;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus status_;
    public boolean hasStatus() { return hasStatus; }
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() { return status_; }
    
    private void initFields() {
      status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasStatus) return false;
      if (!getStatus().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStatus()) {
        output.writeMessage(1, getStatus());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStatus());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder subBuilder = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.newBuilder();
              if (hasStatus()) {
                subBuilder.mergeFrom(getStatus());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStatus(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .concurrencycontrol.ResponseStatus status = 1;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder setStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder builderForValue) {
        result.hasStatus = true;
        result.status_ = builderForValue.build();
        return this;
      }
      public Builder mergeStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (result.hasStatus() &&
            result.status_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance()) {
          result.status_ =
            org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.newBuilder(result.status_).mergeFrom(value).buildPartial();
        } else {
          result.status_ = value;
        }
        result.hasStatus = true;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.WaveletChannelTerminator)
    }
    
    static {
      defaultInstance = new WaveletChannelTerminator(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.WaveletChannelTerminator)
  }
  
  public static final class SubmitDeltaRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SubmitDeltaRequest.newBuilder() to construct.
    private SubmitDeltaRequest() {
      initFields();
    }
    private SubmitDeltaRequest(boolean noInit) {}
    
    private static final SubmitDeltaRequest defaultInstance;
    public static SubmitDeltaRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SubmitDeltaRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaRequest_fieldAccessorTable;
    }
    
    // required string waveId = 1;
    public static final int WAVEID_FIELD_NUMBER = 1;
    private boolean hasWaveId;
    private java.lang.String waveId_ = "";
    public boolean hasWaveId() { return hasWaveId; }
    public java.lang.String getWaveId() { return waveId_; }
    
    // required string waveletId = 2;
    public static final int WAVELETID_FIELD_NUMBER = 2;
    private boolean hasWaveletId;
    private java.lang.String waveletId_ = "";
    public boolean hasWaveletId() { return hasWaveletId; }
    public java.lang.String getWaveletId() { return waveletId_; }
    
    // required .federation.ProtocolWaveletDelta delta = 3;
    public static final int DELTA_FIELD_NUMBER = 3;
    private boolean hasDelta;
    private org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta delta_;
    public boolean hasDelta() { return hasDelta; }
    public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta() { return delta_; }
    
    // required string channelId = 4;
    public static final int CHANNELID_FIELD_NUMBER = 4;
    private boolean hasChannelId;
    private java.lang.String channelId_ = "";
    public boolean hasChannelId() { return hasChannelId; }
    public java.lang.String getChannelId() { return channelId_; }
    
    private void initFields() {
      delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasWaveId) return false;
      if (!hasWaveletId) return false;
      if (!hasDelta) return false;
      if (!hasChannelId) return false;
      if (!getDelta().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWaveId()) {
        output.writeString(1, getWaveId());
      }
      if (hasWaveletId()) {
        output.writeString(2, getWaveletId());
      }
      if (hasDelta()) {
        output.writeMessage(3, getDelta());
      }
      if (hasChannelId()) {
        output.writeString(4, getChannelId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWaveId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getWaveId());
      }
      if (hasWaveletId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getWaveletId());
      }
      if (hasDelta()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDelta());
      }
      if (hasChannelId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getChannelId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.getDefaultInstance()) return this;
        if (other.hasWaveId()) {
          setWaveId(other.getWaveId());
        }
        if (other.hasWaveletId()) {
          setWaveletId(other.getWaveletId());
        }
        if (other.hasDelta()) {
          mergeDelta(other.getDelta());
        }
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setWaveId(input.readString());
              break;
            }
            case 18: {
              setWaveletId(input.readString());
              break;
            }
            case 26: {
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.newBuilder();
              if (hasDelta()) {
                subBuilder.mergeFrom(getDelta());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDelta(subBuilder.buildPartial());
              break;
            }
            case 34: {
              setChannelId(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string waveId = 1;
      public boolean hasWaveId() {
        return result.hasWaveId();
      }
      public java.lang.String getWaveId() {
        return result.getWaveId();
      }
      public Builder setWaveId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWaveId = true;
        result.waveId_ = value;
        return this;
      }
      public Builder clearWaveId() {
        result.hasWaveId = false;
        result.waveId_ = getDefaultInstance().getWaveId();
        return this;
      }
      
      // required string waveletId = 2;
      public boolean hasWaveletId() {
        return result.hasWaveletId();
      }
      public java.lang.String getWaveletId() {
        return result.getWaveletId();
      }
      public Builder setWaveletId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWaveletId = true;
        result.waveletId_ = value;
        return this;
      }
      public Builder clearWaveletId() {
        result.hasWaveletId = false;
        result.waveletId_ = getDefaultInstance().getWaveletId();
        return this;
      }
      
      // required .federation.ProtocolWaveletDelta delta = 3;
      public boolean hasDelta() {
        return result.hasDelta();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta() {
        return result.getDelta();
      }
      public Builder setDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDelta = true;
        result.delta_ = value;
        return this;
      }
      public Builder setDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder builderForValue) {
        result.hasDelta = true;
        result.delta_ = builderForValue.build();
        return this;
      }
      public Builder mergeDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (result.hasDelta() &&
            result.delta_ != org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance()) {
          result.delta_ =
            org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.newBuilder(result.delta_).mergeFrom(value).buildPartial();
        } else {
          result.delta_ = value;
        }
        result.hasDelta = true;
        return this;
      }
      public Builder clearDelta() {
        result.hasDelta = false;
        result.delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
        return this;
      }
      
      // required string channelId = 4;
      public boolean hasChannelId() {
        return result.hasChannelId();
      }
      public java.lang.String getChannelId() {
        return result.getChannelId();
      }
      public Builder setChannelId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder clearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = getDefaultInstance().getChannelId();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.SubmitDeltaRequest)
    }
    
    static {
      defaultInstance = new SubmitDeltaRequest(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.SubmitDeltaRequest)
  }
  
  public static final class SubmitDeltaResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use SubmitDeltaResponse.newBuilder() to construct.
    private SubmitDeltaResponse() {
      initFields();
    }
    private SubmitDeltaResponse(boolean noInit) {}
    
    private static final SubmitDeltaResponse defaultInstance;
    public static SubmitDeltaResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public SubmitDeltaResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_SubmitDeltaResponse_fieldAccessorTable;
    }
    
    // required .concurrencycontrol.ResponseStatus status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private boolean hasStatus;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus status_;
    public boolean hasStatus() { return hasStatus; }
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() { return status_; }
    
    // required int32 operationsApplied = 2;
    public static final int OPERATIONSAPPLIED_FIELD_NUMBER = 2;
    private boolean hasOperationsApplied;
    private int operationsApplied_ = 0;
    public boolean hasOperationsApplied() { return hasOperationsApplied; }
    public int getOperationsApplied() { return operationsApplied_; }
    
    // optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;
    public static final int HASHEDVERSIONAFTERAPPLICATION_FIELD_NUMBER = 3;
    private boolean hasHashedVersionAfterApplication;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion hashedVersionAfterApplication_;
    public boolean hasHashedVersionAfterApplication() { return hasHashedVersionAfterApplication; }
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersionAfterApplication() { return hashedVersionAfterApplication_; }
    
    // optional int64 timestampAfterApplication = 4;
    public static final int TIMESTAMPAFTERAPPLICATION_FIELD_NUMBER = 4;
    private boolean hasTimestampAfterApplication;
    private long timestampAfterApplication_ = 0L;
    public boolean hasTimestampAfterApplication() { return hasTimestampAfterApplication; }
    public long getTimestampAfterApplication() { return timestampAfterApplication_; }
    
    private void initFields() {
      status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
      hashedVersionAfterApplication_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasStatus) return false;
      if (!hasOperationsApplied) return false;
      if (!getStatus().isInitialized()) return false;
      if (hasHashedVersionAfterApplication()) {
        if (!getHashedVersionAfterApplication().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStatus()) {
        output.writeMessage(1, getStatus());
      }
      if (hasOperationsApplied()) {
        output.writeInt32(2, getOperationsApplied());
      }
      if (hasHashedVersionAfterApplication()) {
        output.writeMessage(3, getHashedVersionAfterApplication());
      }
      if (hasTimestampAfterApplication()) {
        output.writeInt64(4, getTimestampAfterApplication());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStatus());
      }
      if (hasOperationsApplied()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getOperationsApplied());
      }
      if (hasHashedVersionAfterApplication()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getHashedVersionAfterApplication());
      }
      if (hasTimestampAfterApplication()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, getTimestampAfterApplication());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        if (other.hasOperationsApplied()) {
          setOperationsApplied(other.getOperationsApplied());
        }
        if (other.hasHashedVersionAfterApplication()) {
          mergeHashedVersionAfterApplication(other.getHashedVersionAfterApplication());
        }
        if (other.hasTimestampAfterApplication()) {
          setTimestampAfterApplication(other.getTimestampAfterApplication());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder subBuilder = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.newBuilder();
              if (hasStatus()) {
                subBuilder.mergeFrom(getStatus());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStatus(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setOperationsApplied(input.readInt32());
              break;
            }
            case 26: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder();
              if (hasHashedVersionAfterApplication()) {
                subBuilder.mergeFrom(getHashedVersionAfterApplication());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHashedVersionAfterApplication(subBuilder.buildPartial());
              break;
            }
            case 32: {
              setTimestampAfterApplication(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required .concurrencycontrol.ResponseStatus status = 1;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder setStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder builderForValue) {
        result.hasStatus = true;
        result.status_ = builderForValue.build();
        return this;
      }
      public Builder mergeStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus value) {
        if (result.hasStatus() &&
            result.status_ != org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance()) {
          result.status_ =
            org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.newBuilder(result.status_).mergeFrom(value).buildPartial();
        } else {
          result.status_ = value;
        }
        result.hasStatus = true;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
        return this;
      }
      
      // required int32 operationsApplied = 2;
      public boolean hasOperationsApplied() {
        return result.hasOperationsApplied();
      }
      public int getOperationsApplied() {
        return result.getOperationsApplied();
      }
      public Builder setOperationsApplied(int value) {
        result.hasOperationsApplied = true;
        result.operationsApplied_ = value;
        return this;
      }
      public Builder clearOperationsApplied() {
        result.hasOperationsApplied = false;
        result.operationsApplied_ = 0;
        return this;
      }
      
      // optional .federation.ProtocolHashedVersion hashedVersionAfterApplication = 3;
      public boolean hasHashedVersionAfterApplication() {
        return result.hasHashedVersionAfterApplication();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersionAfterApplication() {
        return result.getHashedVersionAfterApplication();
      }
      public Builder setHashedVersionAfterApplication(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHashedVersionAfterApplication = true;
        result.hashedVersionAfterApplication_ = value;
        return this;
      }
      public Builder setHashedVersionAfterApplication(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        result.hasHashedVersionAfterApplication = true;
        result.hashedVersionAfterApplication_ = builderForValue.build();
        return this;
      }
      public Builder mergeHashedVersionAfterApplication(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (result.hasHashedVersionAfterApplication() &&
            result.hashedVersionAfterApplication_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
          result.hashedVersionAfterApplication_ =
            org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(result.hashedVersionAfterApplication_).mergeFrom(value).buildPartial();
        } else {
          result.hashedVersionAfterApplication_ = value;
        }
        result.hasHashedVersionAfterApplication = true;
        return this;
      }
      public Builder clearHashedVersionAfterApplication() {
        result.hasHashedVersionAfterApplication = false;
        result.hashedVersionAfterApplication_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        return this;
      }
      
      // optional int64 timestampAfterApplication = 4;
      public boolean hasTimestampAfterApplication() {
        return result.hasTimestampAfterApplication();
      }
      public long getTimestampAfterApplication() {
        return result.getTimestampAfterApplication();
      }
      public Builder setTimestampAfterApplication(long value) {
        result.hasTimestampAfterApplication = true;
        result.timestampAfterApplication_ = value;
        return this;
      }
      public Builder clearTimestampAfterApplication() {
        result.hasTimestampAfterApplication = false;
        result.timestampAfterApplication_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.SubmitDeltaResponse)
    }
    
    static {
      defaultInstance = new SubmitDeltaResponse(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.SubmitDeltaResponse)
  }
  
  public static final class TransportAuthenticationRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use TransportAuthenticationRequest.newBuilder() to construct.
    private TransportAuthenticationRequest() {
      initFields();
    }
    private TransportAuthenticationRequest(boolean noInit) {}
    
    private static final TransportAuthenticationRequest defaultInstance;
    public static TransportAuthenticationRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransportAuthenticationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_TransportAuthenticationRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_TransportAuthenticationRequest_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.TransportAuthenticationRequest)
    }
    
    static {
      defaultInstance = new TransportAuthenticationRequest(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.TransportAuthenticationRequest)
  }
  
  public static final class EmptyResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use EmptyResponse.newBuilder() to construct.
    private EmptyResponse() {
      initFields();
    }
    private EmptyResponse(boolean noInit) {}
    
    private static final EmptyResponse defaultInstance;
    public static EmptyResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public EmptyResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_EmptyResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_EmptyResponse_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.EmptyResponse)
    }
    
    static {
      defaultInstance = new EmptyResponse(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.EmptyResponse)
  }
  
  public static final class ResponseStatus extends
      com.google.protobuf.GeneratedMessage {
    // Use ResponseStatus.newBuilder() to construct.
    private ResponseStatus() {
      initFields();
    }
    private ResponseStatus(boolean noInit) {}
    
    private static final ResponseStatus defaultInstance;
    public static ResponseStatus getDefaultInstance() {
      return defaultInstance;
    }
    
    public ResponseStatus getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_ResponseStatus_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.internal_static_concurrencycontrol_ResponseStatus_fieldAccessorTable;
    }
    
    public enum ResponseCode
        implements com.google.protobuf.ProtocolMessageEnum {
      OK(0, 0),
      BAD_REQUEST(1, 1),
      INTERNAL_ERROR(2, 2),
      NOT_AUTHORIZED(3, 3),
      VERSION_ERROR(4, 4),
      INVALID_OPERATION(5, 5),
      SCHEMA_VIOLATION(6, 6),
      SIZE_LIMIT_EXCEEDED(7, 7),
      POLICY_VIOLATION(8, 8),
      QUARANTINED(9, 9),
      TOO_OLD(10, 10),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static ResponseCode valueOf(int value) {
        switch (value) {
          case 0: return OK;
          case 1: return BAD_REQUEST;
          case 2: return INTERNAL_ERROR;
          case 3: return NOT_AUTHORIZED;
          case 4: return VERSION_ERROR;
          case 5: return INVALID_OPERATION;
          case 6: return SCHEMA_VIOLATION;
          case 7: return SIZE_LIMIT_EXCEEDED;
          case 8: return POLICY_VIOLATION;
          case 9: return QUARANTINED;
          case 10: return TOO_OLD;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<ResponseCode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ResponseCode>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ResponseCode>() {
              public ResponseCode findValueByNumber(int number) {
                return ResponseCode.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final ResponseCode[] VALUES = {
        OK, BAD_REQUEST, INTERNAL_ERROR, NOT_AUTHORIZED, VERSION_ERROR, INVALID_OPERATION, SCHEMA_VIOLATION, SIZE_LIMIT_EXCEEDED, POLICY_VIOLATION, QUARANTINED, TOO_OLD, 
      };
      public static ResponseCode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private ResponseCode(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        org.waveprotocol.wave.concurrencycontrol.ClientServer.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:concurrencycontrol.ResponseStatus.ResponseCode)
    }
    
    // required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private boolean hasStatus;
    private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode status_;
    public boolean hasStatus() { return hasStatus; }
    public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode getStatus() { return status_; }
    
    // optional string failureReason = 2;
    public static final int FAILUREREASON_FIELD_NUMBER = 2;
    private boolean hasFailureReason;
    private java.lang.String failureReason_ = "";
    public boolean hasFailureReason() { return hasFailureReason; }
    public java.lang.String getFailureReason() { return failureReason_; }
    
    private void initFields() {
      status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode.OK;
    }
    public final boolean isInitialized() {
      if (!hasStatus) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStatus()) {
        output.writeEnum(1, getStatus().getNumber());
      }
      if (hasFailureReason()) {
        output.writeString(2, getFailureReason());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getStatus().getNumber());
      }
      if (hasFailureReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getFailureReason());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus result;
      
      // Construct using org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus();
        return builder;
      }
      
      protected org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDescriptor();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus getDefaultInstanceForType() {
        return org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus) {
          return mergeFrom((org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus other) {
        if (other == org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasFailureReason()) {
          setFailureReason(other.getFailureReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode value = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setStatus(value);
              }
              break;
            }
            case 18: {
              setFailureReason(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .concurrencycontrol.ResponseStatus.ResponseCode status = 1;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.ResponseCode.OK;
        return this;
      }
      
      // optional string failureReason = 2;
      public boolean hasFailureReason() {
        return result.hasFailureReason();
      }
      public java.lang.String getFailureReason() {
        return result.getFailureReason();
      }
      public Builder setFailureReason(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFailureReason = true;
        result.failureReason_ = value;
        return this;
      }
      public Builder clearFailureReason() {
        result.hasFailureReason = false;
        result.failureReason_ = getDefaultInstance().getFailureReason();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:concurrencycontrol.ResponseStatus)
    }
    
    static {
      defaultInstance = new ResponseStatus(true);
      org.waveprotocol.wave.concurrencycontrol.ClientServer.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:concurrencycontrol.ResponseStatus)
  }
  
  public static abstract class FetchService
      implements com.google.protobuf.Service {
    protected FetchService() {}
    
    public interface Interface {
      public abstract void fetch(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new FetchService() {
        @Override
        public  void fetch(
            com.google.protobuf.RpcController controller,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest request,
            com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse> done) {
          impl.fetch(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.fetch(controller, (org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void fetch(
        com.google.protobuf.RpcController controller,
        org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest request,
        com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.fetch(controller, (org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest)request,
            com.google.protobuf.RpcUtil.<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void fetch(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.class,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse fetch(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse fetch(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class WaveletChannelService
      implements com.google.protobuf.Service {
    protected WaveletChannelService() {}
    
    public interface Interface {
      public abstract void open(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream> done);
      
      public abstract void close(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new WaveletChannelService() {
        @Override
        public  void open(
            com.google.protobuf.RpcController controller,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest request,
            com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream> done) {
          impl.open(controller, request, done);
        }
        
        @Override
        public  void close(
            com.google.protobuf.RpcController controller,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest request,
            com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse> done) {
          impl.close(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.open(controller, (org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest)request);
            case 1:
              return impl.close(controller, (org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.getDefaultInstance();
            case 1:
              return org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.getDefaultInstance();
            case 1:
              return org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void open(
        com.google.protobuf.RpcController controller,
        org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest request,
        com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream> done);
    
    public abstract void close(
        com.google.protobuf.RpcController controller,
        org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest request,
        com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.getDescriptor().getServices().get(1);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.open(controller, (org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest)request,
            com.google.protobuf.RpcUtil.<org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream>specializeCallback(
              done));
          return;
        case 1:
          this.close(controller, (org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest)request,
            com.google.protobuf.RpcUtil.<org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.getDefaultInstance();
        case 1:
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.getDefaultInstance();
        case 1:
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void open(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.class,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.getDefaultInstance()));
      }
      
      public  void close(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.class,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream open(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest request)
          throws com.google.protobuf.ServiceException;
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse close(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream open(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.getDefaultInstance());
      }
      
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse close(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class DeltaSubmissionService
      implements com.google.protobuf.Service {
    protected DeltaSubmissionService() {}
    
    public interface Interface {
      public abstract void submit(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new DeltaSubmissionService() {
        @Override
        public  void submit(
            com.google.protobuf.RpcController controller,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest request,
            com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse> done) {
          impl.submit(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.submit(controller, (org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void submit(
        com.google.protobuf.RpcController controller,
        org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest request,
        com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.getDescriptor().getServices().get(2);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.submit(controller, (org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest)request,
            com.google.protobuf.RpcUtil.<org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.waveprotocol.wave.concurrencycontrol.ClientServer.DeltaSubmissionService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void submit(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.class,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse submit(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse submit(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class TransportAuthenticationService
      implements com.google.protobuf.Service {
    protected TransportAuthenticationService() {}
    
    public interface Interface {
      public abstract void authenticate(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new TransportAuthenticationService() {
        @Override
        public  void authenticate(
            com.google.protobuf.RpcController controller,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest request,
            com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse> done) {
          impl.authenticate(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.authenticate(controller, (org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void authenticate(
        com.google.protobuf.RpcController controller,
        org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest request,
        com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.waveprotocol.wave.concurrencycontrol.ClientServer.getDescriptor().getServices().get(3);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.authenticate(controller, (org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest)request,
            com.google.protobuf.RpcUtil.<org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void authenticate(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest request,
          com.google.protobuf.RpcCallback<org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.class,
            org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse authenticate(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse authenticate(
          com.google.protobuf.RpcController controller,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_FetchWaveViewRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_FetchWaveViewRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_FetchWaveViewResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_FetchWaveViewResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_WaveletVersion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_WaveletVersion_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_WaveletSnapshot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_WaveletSnapshot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_DocumentSnapshot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_DocumentSnapshot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_OpenWaveletChannelRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_OpenWaveletChannelRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_OpenWaveletChannelStream_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_OpenWaveletChannelStream_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_CloseWaveletChannelRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_CloseWaveletChannelRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_WaveletUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_WaveletUpdate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_WaveletChannelTerminator_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_WaveletChannelTerminator_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_SubmitDeltaRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_SubmitDeltaRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_SubmitDeltaResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_SubmitDeltaResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_TransportAuthenticationRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_TransportAuthenticationRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_EmptyResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_EmptyResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_concurrencycontrol_ResponseStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_concurrencycontrol_ResponseStatus_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;org/waveprotocol/wave/concurrencycontr" +
      "ol/clientserver.proto\022\022concurrencycontro" +
      "l\032)org/waveprotocol/box/server/rpc/rpc.p" +
      "roto\0326org/waveprotocol/wave/federation/f" +
      "ederation.protodevel\"`\n\024FetchWaveViewReq" +
      "uest\022\016\n\006waveId\030\001 \002(\t\0228\n\014knownWavelet\030\002 \003" +
      "(\0132\".concurrencycontrol.WaveletVersion\"\344" +
      "\001\n\025FetchWaveViewResponse\0222\n\006status\030\001 \002(\013" +
      "2\".concurrencycontrol.ResponseStatus\022B\n\007" +
      "wavelet\030\002 \003(\01321.concurrencycontrol.Fetch",
      "WaveViewResponse.Wavelet\032S\n\007Wavelet\022\021\n\tw" +
      "aveletId\030\001 \002(\t\0225\n\010snapshot\030\002 \001(\0132#.concu" +
      "rrencycontrol.WaveletSnapshot\"W\n\016Wavelet" +
      "Version\022\021\n\twaveletId\030\001 \002(\t\0222\n\007version\030\002 " +
      "\002(\0132!.federation.ProtocolHashedVersion\"\346" +
      "\001\n\017WaveletSnapshot\022\021\n\twaveletId\030\001 \002(\t\022\023\n" +
      "\013participant\030\002 \003(\t\0226\n\010document\030\003 \003(\0132$.c" +
      "oncurrencycontrol.DocumentSnapshot\0222\n\007ve" +
      "rsion\030\004 \002(\0132!.federation.ProtocolHashedV" +
      "ersion\022\030\n\020lastModifiedTime\030\005 \002(\003\022\017\n\007crea",
      "tor\030\006 \002(\t\022\024\n\014creationTime\030\007 \002(\003\"\304\001\n\020Docu" +
      "mentSnapshot\022\022\n\ndocumentId\030\001 \002(\t\022@\n\021docu" +
      "mentOperation\030\002 \002(\0132%.federation.Protoco" +
      "lDocumentOperation\022\016\n\006author\030\003 \002(\t\022\023\n\013co" +
      "ntributor\030\004 \003(\t\022\033\n\023lastModifiedVersion\030\005" +
      " \002(\003\022\030\n\020lastModifiedTime\030\006 \002(\003\"w\n\031OpenWa" +
      "veletChannelRequest\022\016\n\006waveId\030\001 \002(\t\022\021\n\tw" +
      "aveletId\030\002 \002(\t\0227\n\014beginVersion\030\003 \002(\0132!.f" +
      "ederation.ProtocolHashedVersion\"\333\001\n\030Open" +
      "WaveletChannelStream\022\021\n\tchannelId\030\001 \001(\t\022",
      "0\n\005delta\030\002 \001(\0132!.concurrencycontrol.Wave" +
      "letUpdate\0228\n\rcommitVersion\030\003 \001(\0132!.feder" +
      "ation.ProtocolHashedVersion\022@\n\nterminato" +
      "r\030\004 \001(\0132,.concurrencycontrol.WaveletChan" +
      "nelTerminator\"/\n\032CloseWaveletChannelRequ" +
      "est\022\021\n\tchannelId\030\001 \002(\t\"\233\001\n\rWaveletUpdate" +
      "\022/\n\005delta\030\001 \002(\0132 .federation.ProtocolWav" +
      "eletDelta\022;\n\020resultingVersion\030\002 \002(\0132!.fe" +
      "deration.ProtocolHashedVersion\022\034\n\024applic" +
      "ationTimpstamp\030\003 \002(\003\"N\n\030WaveletChannelTe",
      "rminator\0222\n\006status\030\001 \002(\0132\".concurrencyco" +
      "ntrol.ResponseStatus\"{\n\022SubmitDeltaReque" +
      "st\022\016\n\006waveId\030\001 \002(\t\022\021\n\twaveletId\030\002 \002(\t\022/\n" +
      "\005delta\030\003 \002(\0132 .federation.ProtocolWavele" +
      "tDelta\022\021\n\tchannelId\030\004 \002(\t\"\321\001\n\023SubmitDelt" +
      "aResponse\0222\n\006status\030\001 \002(\0132\".concurrencyc" +
      "ontrol.ResponseStatus\022\031\n\021operationsAppli" +
      "ed\030\002 \002(\005\022H\n\035hashedVersionAfterApplicatio" +
      "n\030\003 \001(\0132!.federation.ProtocolHashedVersi" +
      "on\022!\n\031timestampAfterApplication\030\004 \001(\003\"/\n",
      "\036TransportAuthenticationRequest\022\r\n\005token" +
      "\030\001 \002(\t\"\017\n\rEmptyResponse\"\307\002\n\016ResponseStat" +
      "us\022?\n\006status\030\001 \002(\0162/.concurrencycontrol." +
      "ResponseStatus.ResponseCode\022\025\n\rfailureRe" +
      "ason\030\002 \001(\t\"\334\001\n\014ResponseCode\022\006\n\002OK\020\000\022\017\n\013B" +
      "AD_REQUEST\020\001\022\022\n\016INTERNAL_ERROR\020\002\022\022\n\016NOT_" +
      "AUTHORIZED\020\003\022\021\n\rVERSION_ERROR\020\004\022\025\n\021INVAL" +
      "ID_OPERATION\020\005\022\024\n\020SCHEMA_VIOLATION\020\006\022\027\n\023" +
      "SIZE_LIMIT_EXCEEDED\020\007\022\024\n\020POLICY_VIOLATIO" +
      "N\020\010\022\017\n\013QUARANTINED\020\t\022\013\n\007TOO_OLD\020\n2l\n\014Fet",
      "chService\022\\\n\005Fetch\022(.concurrencycontrol." +
      "FetchWaveViewRequest\032).concurrencycontro" +
      "l.FetchWaveViewResponse2\335\001\n\025WaveletChann" +
      "elService\022h\n\004Open\022-.concurrencycontrol.O" +
      "penWaveletChannelRequest\032,.concurrencyco" +
      "ntrol.OpenWaveletChannelStream\"\003\330>\001\022Z\n\005C" +
      "lose\022..concurrencycontrol.CloseWaveletCh" +
      "annelRequest\032!.concurrencycontrol.EmptyR" +
      "esponse2s\n\026DeltaSubmissionService\022Y\n\006Sub" +
      "mit\022&.concurrencycontrol.SubmitDeltaRequ",
      "est\032\'.concurrencycontrol.SubmitDeltaResp" +
      "onse2\207\001\n\036TransportAuthenticationService\022" +
      "e\n\014Authenticate\0222.concurrencycontrol.Tra" +
      "nsportAuthenticationRequest\032!.concurrenc" +
      "ycontrol.EmptyResponseB8\n(org.waveprotoc" +
      "ol.wave.concurrencycontrolB\014ClientServer"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_concurrencycontrol_FetchWaveViewRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_concurrencycontrol_FetchWaveViewRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_FetchWaveViewRequest_descriptor,
              new java.lang.String[] { "WaveId", "KnownWavelet", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewRequest.Builder.class);
          internal_static_concurrencycontrol_FetchWaveViewResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_concurrencycontrol_FetchWaveViewResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_FetchWaveViewResponse_descriptor,
              new java.lang.String[] { "Status", "Wavelet", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Builder.class);
          internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_descriptor =
            internal_static_concurrencycontrol_FetchWaveViewResponse_descriptor.getNestedTypes().get(0);
          internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_FetchWaveViewResponse_Wavelet_descriptor,
              new java.lang.String[] { "WaveletId", "Snapshot", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.FetchWaveViewResponse.Wavelet.Builder.class);
          internal_static_concurrencycontrol_WaveletVersion_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_concurrencycontrol_WaveletVersion_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_WaveletVersion_descriptor,
              new java.lang.String[] { "WaveletId", "Version", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletVersion.Builder.class);
          internal_static_concurrencycontrol_WaveletSnapshot_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_concurrencycontrol_WaveletSnapshot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_WaveletSnapshot_descriptor,
              new java.lang.String[] { "WaveletId", "Participant", "Document", "Version", "LastModifiedTime", "Creator", "CreationTime", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletSnapshot.Builder.class);
          internal_static_concurrencycontrol_DocumentSnapshot_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_concurrencycontrol_DocumentSnapshot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_DocumentSnapshot_descriptor,
              new java.lang.String[] { "DocumentId", "DocumentOperation", "Author", "Contributor", "LastModifiedVersion", "LastModifiedTime", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.DocumentSnapshot.Builder.class);
          internal_static_concurrencycontrol_OpenWaveletChannelRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_concurrencycontrol_OpenWaveletChannelRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_OpenWaveletChannelRequest_descriptor,
              new java.lang.String[] { "WaveId", "WaveletId", "BeginVersion", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelRequest.Builder.class);
          internal_static_concurrencycontrol_OpenWaveletChannelStream_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_concurrencycontrol_OpenWaveletChannelStream_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_OpenWaveletChannelStream_descriptor,
              new java.lang.String[] { "ChannelId", "Delta", "CommitVersion", "Terminator", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.OpenWaveletChannelStream.Builder.class);
          internal_static_concurrencycontrol_CloseWaveletChannelRequest_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_concurrencycontrol_CloseWaveletChannelRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_CloseWaveletChannelRequest_descriptor,
              new java.lang.String[] { "ChannelId", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.CloseWaveletChannelRequest.Builder.class);
          internal_static_concurrencycontrol_WaveletUpdate_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_concurrencycontrol_WaveletUpdate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_WaveletUpdate_descriptor,
              new java.lang.String[] { "Delta", "ResultingVersion", "ApplicationTimpstamp", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletUpdate.Builder.class);
          internal_static_concurrencycontrol_WaveletChannelTerminator_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_concurrencycontrol_WaveletChannelTerminator_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_WaveletChannelTerminator_descriptor,
              new java.lang.String[] { "Status", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.WaveletChannelTerminator.Builder.class);
          internal_static_concurrencycontrol_SubmitDeltaRequest_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_concurrencycontrol_SubmitDeltaRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_SubmitDeltaRequest_descriptor,
              new java.lang.String[] { "WaveId", "WaveletId", "Delta", "ChannelId", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaRequest.Builder.class);
          internal_static_concurrencycontrol_SubmitDeltaResponse_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_concurrencycontrol_SubmitDeltaResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_SubmitDeltaResponse_descriptor,
              new java.lang.String[] { "Status", "OperationsApplied", "HashedVersionAfterApplication", "TimestampAfterApplication", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.SubmitDeltaResponse.Builder.class);
          internal_static_concurrencycontrol_TransportAuthenticationRequest_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_concurrencycontrol_TransportAuthenticationRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_TransportAuthenticationRequest_descriptor,
              new java.lang.String[] { "Token", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.TransportAuthenticationRequest.Builder.class);
          internal_static_concurrencycontrol_EmptyResponse_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_concurrencycontrol_EmptyResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_EmptyResponse_descriptor,
              new java.lang.String[] { },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.EmptyResponse.Builder.class);
          internal_static_concurrencycontrol_ResponseStatus_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_concurrencycontrol_ResponseStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_concurrencycontrol_ResponseStatus_descriptor,
              new java.lang.String[] { "Status", "FailureReason", },
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.class,
              org.waveprotocol.wave.concurrencycontrol.ClientServer.ResponseStatus.Builder.class);
          com.google.protobuf.ExtensionRegistry registry =
            com.google.protobuf.ExtensionRegistry.newInstance();
          registerAllExtensions(registry);
          org.waveprotocol.box.server.rpc.Rpc.registerAllExtensions(registry);
          org.waveprotocol.wave.federation.Proto.registerAllExtensions(registry);
          return registry;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.waveprotocol.box.server.rpc.Rpc.getDescriptor(),
          org.waveprotocol.wave.federation.Proto.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
