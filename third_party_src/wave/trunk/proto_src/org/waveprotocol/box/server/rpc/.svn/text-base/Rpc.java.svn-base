// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/waveprotocol/box/server/rpc/rpc.proto

package org.waveprotocol.box.server.rpc;

public final class Rpc {
  private Rpc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registry.add(org.waveprotocol.box.server.rpc.Rpc.isStreamingRpc);
  }
  public static final class CancelRpc extends
      com.google.protobuf.GeneratedMessage {
    // Use CancelRpc.newBuilder() to construct.
    private CancelRpc() {
      initFields();
    }
    private CancelRpc(boolean noInit) {}
    
    private static final CancelRpc defaultInstance;
    public static CancelRpc getDefaultInstance() {
      return defaultInstance;
    }
    
    public CancelRpc getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.box.server.rpc.Rpc.internal_static_rpc_CancelRpc_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.box.server.rpc.Rpc.internal_static_rpc_CancelRpc_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.box.server.rpc.Rpc.CancelRpc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.CancelRpc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.CancelRpc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.CancelRpc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.CancelRpc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.CancelRpc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.CancelRpc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.box.server.rpc.Rpc.CancelRpc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.box.server.rpc.Rpc.CancelRpc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.CancelRpc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.box.server.rpc.Rpc.CancelRpc prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.box.server.rpc.Rpc.CancelRpc result;
      
      // Construct using org.waveprotocol.box.server.rpc.Rpc.CancelRpc.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.box.server.rpc.Rpc.CancelRpc();
        return builder;
      }
      
      protected org.waveprotocol.box.server.rpc.Rpc.CancelRpc internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.box.server.rpc.Rpc.CancelRpc();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.box.server.rpc.Rpc.CancelRpc.getDescriptor();
      }
      
      public org.waveprotocol.box.server.rpc.Rpc.CancelRpc getDefaultInstanceForType() {
        return org.waveprotocol.box.server.rpc.Rpc.CancelRpc.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.box.server.rpc.Rpc.CancelRpc build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.box.server.rpc.Rpc.CancelRpc buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.box.server.rpc.Rpc.CancelRpc buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.box.server.rpc.Rpc.CancelRpc returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.box.server.rpc.Rpc.CancelRpc) {
          return mergeFrom((org.waveprotocol.box.server.rpc.Rpc.CancelRpc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.box.server.rpc.Rpc.CancelRpc other) {
        if (other == org.waveprotocol.box.server.rpc.Rpc.CancelRpc.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:rpc.CancelRpc)
    }
    
    static {
      defaultInstance = new CancelRpc(true);
      org.waveprotocol.box.server.rpc.Rpc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:rpc.CancelRpc)
  }
  
  public static final class RpcFinished extends
      com.google.protobuf.GeneratedMessage {
    // Use RpcFinished.newBuilder() to construct.
    private RpcFinished() {
      initFields();
    }
    private RpcFinished(boolean noInit) {}
    
    private static final RpcFinished defaultInstance;
    public static RpcFinished getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpcFinished getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.waveprotocol.box.server.rpc.Rpc.internal_static_rpc_RpcFinished_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.waveprotocol.box.server.rpc.Rpc.internal_static_rpc_RpcFinished_fieldAccessorTable;
    }
    
    // required bool failed = 1;
    public static final int FAILED_FIELD_NUMBER = 1;
    private boolean hasFailed;
    private boolean failed_ = false;
    public boolean hasFailed() { return hasFailed; }
    public boolean getFailed() { return failed_; }
    
    // optional string error_text = 2;
    public static final int ERROR_TEXT_FIELD_NUMBER = 2;
    private boolean hasErrorText;
    private java.lang.String errorText_ = "";
    public boolean hasErrorText() { return hasErrorText; }
    public java.lang.String getErrorText() { return errorText_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasFailed) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFailed()) {
        output.writeBool(1, getFailed());
      }
      if (hasErrorText()) {
        output.writeString(2, getErrorText());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFailed()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getFailed());
      }
      if (hasErrorText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getErrorText());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.waveprotocol.box.server.rpc.Rpc.RpcFinished parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.RpcFinished parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.RpcFinished parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.RpcFinished parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.RpcFinished parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.RpcFinished parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.RpcFinished parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.box.server.rpc.Rpc.RpcFinished parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.waveprotocol.box.server.rpc.Rpc.RpcFinished parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.waveprotocol.box.server.rpc.Rpc.RpcFinished parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.waveprotocol.box.server.rpc.Rpc.RpcFinished prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.waveprotocol.box.server.rpc.Rpc.RpcFinished result;
      
      // Construct using org.waveprotocol.box.server.rpc.Rpc.RpcFinished.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.waveprotocol.box.server.rpc.Rpc.RpcFinished();
        return builder;
      }
      
      protected org.waveprotocol.box.server.rpc.Rpc.RpcFinished internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.waveprotocol.box.server.rpc.Rpc.RpcFinished();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.waveprotocol.box.server.rpc.Rpc.RpcFinished.getDescriptor();
      }
      
      public org.waveprotocol.box.server.rpc.Rpc.RpcFinished getDefaultInstanceForType() {
        return org.waveprotocol.box.server.rpc.Rpc.RpcFinished.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.waveprotocol.box.server.rpc.Rpc.RpcFinished build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.waveprotocol.box.server.rpc.Rpc.RpcFinished buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.waveprotocol.box.server.rpc.Rpc.RpcFinished buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.waveprotocol.box.server.rpc.Rpc.RpcFinished returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.waveprotocol.box.server.rpc.Rpc.RpcFinished) {
          return mergeFrom((org.waveprotocol.box.server.rpc.Rpc.RpcFinished)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.waveprotocol.box.server.rpc.Rpc.RpcFinished other) {
        if (other == org.waveprotocol.box.server.rpc.Rpc.RpcFinished.getDefaultInstance()) return this;
        if (other.hasFailed()) {
          setFailed(other.getFailed());
        }
        if (other.hasErrorText()) {
          setErrorText(other.getErrorText());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setFailed(input.readBool());
              break;
            }
            case 18: {
              setErrorText(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required bool failed = 1;
      public boolean hasFailed() {
        return result.hasFailed();
      }
      public boolean getFailed() {
        return result.getFailed();
      }
      public Builder setFailed(boolean value) {
        result.hasFailed = true;
        result.failed_ = value;
        return this;
      }
      public Builder clearFailed() {
        result.hasFailed = false;
        result.failed_ = false;
        return this;
      }
      
      // optional string error_text = 2;
      public boolean hasErrorText() {
        return result.hasErrorText();
      }
      public java.lang.String getErrorText() {
        return result.getErrorText();
      }
      public Builder setErrorText(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasErrorText = true;
        result.errorText_ = value;
        return this;
      }
      public Builder clearErrorText() {
        result.hasErrorText = false;
        result.errorText_ = getDefaultInstance().getErrorText();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:rpc.RpcFinished)
    }
    
    static {
      defaultInstance = new RpcFinished(true);
      org.waveprotocol.box.server.rpc.Rpc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:rpc.RpcFinished)
  }
  
  public static final int IS_STREAMING_RPC_FIELD_NUMBER = 1003;
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.MethodOptions,
      java.lang.Boolean> isStreamingRpc =
        com.google.protobuf.GeneratedMessage
          .newGeneratedExtension();
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_CancelRpc_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rpc_CancelRpc_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_RpcFinished_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rpc_RpcFinished_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)org/waveprotocol/box/server/rpc/rpc.pr" +
      "oto\022\003rpc\032 google/protobuf/descriptor.pro" +
      "to\"\013\n\tCancelRpc\"1\n\013RpcFinished\022\016\n\006failed" +
      "\030\001 \002(\010\022\022\n\nerror_text\030\002 \001(\t:@\n\020is_streami" +
      "ng_rpc\022\036.google.protobuf.MethodOptions\030\353" +
      "\007 \001(\010:\005falseB&\n\037org.waveprotocol.box.ser" +
      "ver.rpcB\003Rpc"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_rpc_CancelRpc_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_rpc_CancelRpc_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rpc_CancelRpc_descriptor,
              new java.lang.String[] { },
              org.waveprotocol.box.server.rpc.Rpc.CancelRpc.class,
              org.waveprotocol.box.server.rpc.Rpc.CancelRpc.Builder.class);
          internal_static_rpc_RpcFinished_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_rpc_RpcFinished_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rpc_RpcFinished_descriptor,
              new java.lang.String[] { "Failed", "ErrorText", },
              org.waveprotocol.box.server.rpc.Rpc.RpcFinished.class,
              org.waveprotocol.box.server.rpc.Rpc.RpcFinished.Builder.class);
          org.waveprotocol.box.server.rpc.Rpc.isStreamingRpc.internalInit(
              org.waveprotocol.box.server.rpc.Rpc.getDescriptor().getExtensions().get(0),
              java.lang.Boolean.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DescriptorProtos.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
